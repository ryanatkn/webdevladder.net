/* generated by gro_plugin_moss */

.box {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
}

/* can be used to override the direction of a `.box` */
.row {
	display: flex;
	flex-direction: row;
	align-items: center;
}

.ellipsis {
	display: block;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

.width_md {
	width: 100%;
	max-width: var(--width_md);
}

/* A panel is a box embedded into the page, useful for visually isolating content. */
.panel {
	border-radius: var(--radius_xs);
	background-color: var(--panel_bg, var(--fg_1));
}

/* TODO other button variants? */
/* TODO this is slightly strange that it doesn't use --icon_size */
/* These are used as modifiers to buttons, and so they use `:where` so they cascade. */
.icon_button {
	width: var(--input_height);
	height: var(--input_height);
	min-width: var(--input_height);
	min-height: var(--input_height);
	flex-shrink: 0;
	line-height: 1;
	font-weight: 900;
	padding: 0;
}

/* TODO maybe this belongs with the reset, like `selected`? or does `selected` belong here? */
.plain:not(:hover) {
	--border_color: transparent;
	box-shadow: none;
	--button_fill: transparent;
}
.plain:hover,
.plain:active {
	--border_color: transparent;
}

.chip {
	font-weight: 600;
	padding: var(--space_xs5) var(--space_sm); /* maybe different inside `p`? using `calc` with `--size`? */
	background-color: var(--fg_1);
	border-radius: var(--radius_xs);
}
a.chip {
	font-weight: 700;
}

.pre {
	font-family: var(--font_mono);
	color: var(--text_color, var(--text_color_3));
	overflow: auto;
	max-width: 100%;
}
.pre > code {
	font-size: var(--size_sm); /* TODO @many use a var? maybe computed from generic `--size`? */
	font-weight: 500;
}
.pre:not(.inline) > code {
	display: block;
}

.relative {
	position: relative;
}
.inline {
	display: inline;
}
.inline_flex {
	display: inline-flex;
}
.block {
	display: block;
}
.flex {
	display: flex;
}
.flex_1 {
	flex: 1;
}
.flex_wrap {
	flex-wrap: wrap;
}
.align_items_center {
	align-items: center;
}
.float_left {
	float: left;
}
.font_mono {
	font-family: var(--font_mono);
}
.size_xl {
	font-size: var(--size_xl);
	--size: var(--size_xl);
}
.size_xl5 {
	font-size: var(--size_xl5);
	--size: var(--size_xl5);
}
.text_color_3 {
	color: var(--text_color_3);
}
.bg {
	background-color: var(--bg);
}
.shadow_inset_xs {
	box-shadow: var(--shadow_inset_xs)
		color-mix(in hsl, var(--shadow_color) var(--shadow_alpha, var(--shadow_alpha_1)), transparent);
}
.shadow_inset_bottom_xs {
	box-shadow: var(--shadow_inset_bottom_xs)
		color-mix(in hsl, var(--shadow_color) var(--shadow_alpha, var(--shadow_alpha_1)), transparent);
}
.w_100 {
	width: 100%;
}
.p_sm {
	padding: var(--space_sm);
}
.p_md {
	padding: var(--space_md);
}
.p_lg {
	padding: var(--space_lg);
}
.p_xl {
	padding: var(--space_xl);
}
.pt_xl5 {
	padding-top: var(--space_xl5);
}
.pr_xl7 {
	padding-right: var(--space_xl7);
}
.pb_md {
	padding-bottom: var(--space_md);
}
.pb_xl9 {
	padding-bottom: var(--space_xl9);
}
.px_lg {
	padding-left: var(--space_lg);
	padding-right: var(--space_lg);
}
.mt_0 {
	margin-top: 0;
}
.mt_md {
	margin-top: var(--space_md);
}
.mt_xl3 {
	margin-top: var(--space_xl3);
}
.mt_xl5 {
	margin-top: var(--space_xl5);
}
.mt_xl7 {
	margin-top: var(--space_xl7);
}
.mr_sm {
	margin-right: var(--space_sm);
}
.mr_lg {
	margin-right: var(--space_lg);
}
.mb_0 {
	margin-bottom: 0;
}
.mb_md {
	margin-bottom: var(--space_md);
}
.mb_lg {
	margin-bottom: var(--space_lg);
}
.mb_xl {
	margin-bottom: var(--space_xl);
}
.mb_xl5 {
	margin-bottom: var(--space_xl5);
}
.mb_xl7 {
	margin-bottom: var(--space_xl7);
}
.mb_xl9 {
	margin-bottom: var(--space_xl9);
}
.ml_sm {
	margin-left: var(--space_sm);
}
.mx_auto {
	margin-left: auto;
	margin-right: auto;
}
.my_sm {
	margin-top: var(--space_sm);
	margin-bottom: var(--space_sm);
}
.my_xl3 {
	margin-top: var(--space_xl3);
	margin-bottom: var(--space_xl3);
}
.gap_lg {
	gap: var(--space_lg);
}

/* generated by gro_plugin_moss */
